// Max Likarenko Homework 002
/*
Завдання написати програму розрахунку вартості газу за рік:
1. Створити клас Газ (Gas) - поля:
	a. ім'я абонента,
	b. кількість спожитого газу в місяці
	c. інші поля при потребі.
2. Формула для розрахунку вартості газу:
	a. 6 грн з 3-10 місяці
	b. 8 грн в 1-2 та 11-12 місяці
3. Внести інформацію в клас по кожному місяцю за цілий рік з клавіатури.
	a. для цього в класі створити відповідні сетери і гетери
4. Порахувати суму оплати помісячно та за рік по абоненту Іван Іванович та вивести в консоь
	a. Суму по кожному місяцю в році
	b. Загальну суму до оплати за рік

Додати вдосконалення згідно вивченого матеріалу:
1. Винести реалізацію великих функцій за межі класу.
2. Створити мінімум 2 конструктори (дефолтний/пустий та для задання імені абоненту)
3. Член класу ім'я абонента оголосити в класі як вказівник на масив чарів та
		ініціалізувати методом new з відповідним розміром імені, що переданий в
		функці сетер параметром (setName).
	a. створити метод для очищення пам'яті для імені, якщо вона була виділена,
		та занулення вказівника. Даний метод викликати в деструкторі.
4. В файлі main.cpp оголосити 2 об'єкти/змінні даного класу з двома видами конструкторів.
	a. задати дані через сетер використаного газу для даних абонентів
		i. для першого абонента
			1. використати пустий конструктор
			2. задати ім'я через сетер - “Petro”
			3. дані по використаному газу помісячно задати в циклі. Дані записати в масив.
		ii. для другого абонента запросити ввести ім'я в ручну з клавіатури
			перед оголошенням класу і передати в конструктор параметром
			1. дані по використаному газу також запросити ввести вручну в циклі
	b. вивести для двох абонентів наступну інформацію:
		i. ім'я абонента
		ii. розрахунки по оплаті помісячно (номер місяця, використано газу, сума за місяць)
		iii. сума загалом за рік
5. Додаткова задачаа на кристалик - створити динамічний масив абонентів
	a. для початку запитати кількість абонентів	для створити масиву об'єктів.
	b. внести дані для всіх абонентів
	c. зробити розрахунок для всіх абонентів та вивести	результати
*/
#include <iostream>
#include <Windows.h>
#include <string>
#define _CRT_SECURE_NO_WARNINGS

using namespace std;

class Gas {
	char* m_name;
	int m_count[12];
public:
	Gas() { m_name = NULL; m_count[12] = { 0 }; };
	Gas(string name) { setName(name); m_count[12] = { 0 }; };
	~Gas();	//не працює
	void setName(string name);	//не зрозумів питання 3
	//string getName() { return name; };
	void setCount(int count, int index) { count >= 0 ? m_count[index] = count : m_count[index] = 0; };
	//int getCount(int index) { return count[index]; };
	int priceForMonth(int month);
	void print();
};

int main()
{
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);
	Gas g1;
	g1.setName("Petro");
	int help_int;
	for (int i = 0; i < 12; i++) {
		cout << "Введіть кількість використаного газу за " << i + 1 << "й місяць: ";
		cin >> help_int;
		g1.setCount(help_int, i);
	}
	cout << "Введіть ім'я другого абонента: ";
	string help_string;
	cin.ignore();
	getline(cin, help_string);
	Gas g2(help_string);
	for (int i = 0; i < 12; i++) {
		cout << "Введіть кількість спожитого газу за " << i + 1 << " місяць: ";
		cin >> help_int;
		g2.setCount(help_int, i);
	}
	g1.print();
	g2.print();
}

Gas::~Gas() {		//не працює
	cout << "del1";
	//if (m_name)
	delete[] m_name;
	m_name = NULL;
	cout << "del2";
}

void Gas::setName(string name) {
	m_name = new char[name.size()];
	for (int i = 0; i < name.size(); i++)
		m_name[i] = name[i];
	m_name[name.size()] = '\0';
}

int Gas::priceForMonth(int month) {
	if (month >= 2 && month <= 9)
		return 6;
	else
		return 8;
}

void Gas::print() {
	cout << "\nІм'я: " << m_name << endl;
	int sum = 0;
	for (int i = 0; i < 12; i++) {
		cout << "Ціна за " << i + 1 << "й місяць за 1 куб становить: " << priceForMonth(i);
		cout << ". Сума - " << priceForMonth(i) * m_count[i] << endl;
		sum += priceForMonth(i) * m_count[i];
	}
	cout << "Ціна за рік: " << sum << endl;
}